<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:Gu.Wpf.PropertyGrid">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Gu.Wpf.PropertyGrid;component/Themes/BaseStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type l:SettingControlBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HeaderStyle" Value="{DynamicResource {x:Static l:Keys.SettingRowHeaderStyleKey}}" />
        <Setter Property="SuffixStyle" Value="{DynamicResource {x:Static l:Keys.SettingRowSuffixStyleKey}}" />
        <Setter Property="InfoPresenterStyle" Value="{DynamicResource {x:Static l:Keys.SettingRowInfoPresenterStyleKey}}" />
        <Setter Property="OldValueStyle" Value="{DynamicResource {x:Static l:Keys.SettingRowOldValueStyleKey}}" />
        <Setter Property="ErrorStyle" Value="{DynamicResource {x:Static l:Keys.SettingRowErrorStyleKey}}" />
    </Style>

    <Style TargetType="{x:Type l:StringSettingControl}">
        <Setter Property="ValueStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type l:StringSettingControl}}}" />
                    <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, RelativeSource={RelativeSource AncestorType={x:Type l:SettingControlBase}}, Mode=OneWay}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SettingControlBase}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <TextBox x:Name="ValueBox" Style="{TemplateBinding ValueStyle}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <ContentPresenter x:Name="InfoPresenter" Style="{TemplateBinding InfoPresenterStyle}" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:CheckBoxSettingControl}">
        <Setter Property="ValueStyle">
            <Setter.Value>
                <Style TargetType="{x:Type CheckBox}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="IsChecked" Value="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type l:BoolSettingControl}}}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SettingControlBase}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <CheckBox x:Name="ValueBox" Style="{TemplateBinding ValueStyle}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <ContentPresenter x:Name="InfoPresenter" Style="{TemplateBinding InfoPresenterStyle}" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ToggleButtonSettingControl}">
        <Setter Property="ValueStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="IsChecked" Value="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type l:BoolSettingControl}}}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SettingControlBase}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <ToggleButton x:Name="ValueBox" Style="{TemplateBinding ValueStyle}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <ContentPresenter x:Name="InfoPresenter" Style="{TemplateBinding InfoPresenterStyle}" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:EnumSettingControl}">
        <Setter Property="ValueStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="SelectedItem" Value="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type l:EnumSettingControl}}}" />
                    <Setter Property="ItemsSource" Value="{Binding EnumValues, RelativeSource={RelativeSource AncestorType={x:Type l:EnumSettingControl}}, Mode=OneWay}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SettingControlBase}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <ComboBox x:Name="ValueBox" Style="{TemplateBinding ValueStyle}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <ContentPresenter x:Name="InfoPresenter" Style="{TemplateBinding InfoPresenterStyle}" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:SelectorSettingControl}">
        <Setter Property="ValueStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBox}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                    <Setter Property="SelectedItem" Value="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type l:SelectorSettingControl}}}" />
                    <Setter Property="ItemsSource" Value="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type l:SelectorSettingControl}}, Mode=OneWay}" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SettingControlBase}">
                    <Grid Margin="{TemplateBinding Padding}"
                          Style="{StaticResource {x:Static l:Keys.RootGridStyleKey}}">

                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <ComboBox x:Name="ValueBox" Style="{TemplateBinding ValueStyle}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <ContentPresenter x:Name="InfoPresenter" Style="{TemplateBinding InfoPresenterStyle}" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ContentSettingControl}">
        <Setter Property="ContentStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="1" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Grid.Row" Value="0" />
                    <Setter Property="Grid.Column" Value="0" />
                    <Setter Property="Focusable" Value="False" />
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ContentSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <!--<Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition SharedSizeGroup="{x:Static l:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <ContentPresenter x:Name="HeaderPresenter"
                                          ContentSource="Header"
                                          Style="{TemplateBinding HeaderStyle}" />

                        <ContentPresenter x:Name="ContentPresenter"
                                          ContentSource="Content"
                                          Style="{TemplateBinding ContentStyle}" />

                        <TextBlock x:Name="SuffixBox"
                                   Style="{TemplateBinding SuffixStyle}" />

                        <!--<ContentPresenter x:Name="InfoPresenter" 
                                          Style="{TemplateBinding InfoPresenterStyle}" />-->
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>