<UserControl x:Class="Gu.Wpf.PropertyGrid.Demo.PlainSettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:demo="clr-namespace:Gu.Wpf.PropertyGrid.Demo"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:propertyGrid="http://gu.se/PropertyGrid"
             xmlns:unitRows="clr-namespace:Gu.Wpf.PropertyGrid.UnitRows;assembly=Gu.Wpf.PropertyGrid.UnitRows"
             xmlns:validationScope="http://gu.se/ValidationScope"
             mc:Ignorable="d">
    <UserControl.DataContext>
        <demo:SettingsVm />
    </UserControl.DataContext>
    <Grid validationScope:Scope.ForInputTypes="Scope" validationScope:Scope.HasErrorsOneWayToSourceBinding="{Binding ViewHasErrors, Mode=OneWayToSource}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <propertyGrid:Rows Grid.Row="0"
                           DataContext="{Binding EditableCopy}"
                           InfoPresenterStyle="{x:Null}"
                           OldDataContext="{Binding DataContext.LastSaved,
                                                    RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
            <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Core" />

            <propertyGrid:StringRow Header="string" Value="{Binding StringValue}" />

            <propertyGrid:StringRow Header="readonly string"
                                    IsReadOnly="True"
                                    Value="{Binding StringValue}" />

            <propertyGrid:CheckBoxRow Header="INotifyDataErrorInfo has error" Value="{Binding HasErrors, ValidatesOnNotifyDataErrors=True}" />
            
            <propertyGrid:CheckBoxRow Header="view has errors"
                                      IsReadOnly="True"
                                      Value="{Binding DataContext.ViewHasErrors,
                                                      RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />

            <propertyGrid:CheckBoxRow Header="checkbox" Value="{Binding BoolValue}" />

            <propertyGrid:BoolRow Header="bool" Value="{Binding BoolValue}" />

            <propertyGrid:ToggleButtonRow Header="togglebutton" Value="{Binding BoolValue}" />


            <propertyGrid:EnumRow Header="enum" Value="{Binding CurrentStringComparison}" />

            <propertyGrid:SelectorRow Header="selector"
                                      ItemsSource="{x:Static demo:SettingsVm.LengthUnits}"
                                      Value="{Binding CurrentLengthUnit}" />

            <propertyGrid:ComboBoxRow Header="combobox"
                                      ItemsSource="{x:Static demo:SettingsVm.LengthUnits}"
                                      Value="{Binding CurrentLengthUnit}" />

            <propertyGrid:ContentRow Header="content">
                <Button Command="{Binding DataContext.SaveCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Content="Save" />
            </propertyGrid:ContentRow>

            <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Numeric" />

            <propertyGrid:IntRow Header="int" Value="{Binding IntValue}" />

            <propertyGrid:IntRow Header="readonly int"
                                 IsReadOnly="True"
                                 Value="{Binding IntValue}" />

            <propertyGrid:IntRow CanValueBeNull="True"
                                 Header="int?"
                                 Value="{Binding NullableIntValue}" />

            <propertyGrid:DoubleRow Header="double" Value="{Binding DoubleValue}" />

            <propertyGrid:DoubleRow Header="readonly double"
                                    IsReadOnly="True"
                                    Value="{Binding DoubleValue}" />

            <propertyGrid:DoubleRow CanValueBeNull="True"
                                    Header="double?"
                                    Value="{Binding NullableDoubleValue}" />

            <TextBlock Style="{StaticResource HeaderTextBlockStyle}" Text="Units" />

            <unitRows:LengthRow Header="Length" Value="{Binding LengthValue}" />

            <unitRows:LengthRow Header="readonly length"
                                IsReadOnly="True"
                                Value="{Binding LengthValue}" />

            <unitRows:LengthRow CanValueBeNull="True"
                                Header="Nullable length"
                                Value="{Binding NullableLengthValue}" />

            <unitRows:SpeedRow Header="Speed (readonly)"
                               IsReadOnly="True"
                               Unit="km/h"
                               Value="{Binding SpeedValue}" />

            <unitRows:LengthRow DecimalDigits="2"
                                Header="Length"
                                MaxValue="15 mm"
                                MinValue="-15 mm"
                                Unit="{Binding CurrentLengthUnit}"
                                Value="{Binding LengthValue}" />
        </propertyGrid:Rows>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0"
                    Command="{Binding SaveCommand}"
                    Content="Save" />
            <Button Grid.Column="1"
                    Command="{Binding UndoAllCommand}"
                    Content="Undo" />
        </Grid>
    </Grid>
</UserControl>















