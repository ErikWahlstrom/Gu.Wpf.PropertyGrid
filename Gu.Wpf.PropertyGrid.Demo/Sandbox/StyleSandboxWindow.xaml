<Window x:Class="Gu.Wpf.PropertyGrid.Demo.Sandbox.StyleSandboxWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:demo="clr-namespace:Gu.Wpf.PropertyGrid.Demo"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:propertyGrid="http://gu.se/PropertyGrid"
        xmlns:sandbox="clr-namespace:Gu.Wpf.PropertyGrid.Demo.Sandbox"
        Title="StyleSandbox"
        SizeToContent="WidthAndHeight"
        mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="HeaderTextBoxStyle" TargetType="{x:Type TextBox}" />

        <ControlTemplate x:Key="StringRowTextBoxHeaderTemplate" TargetType="{x:Type propertyGrid:StringRow}">
            <Border Margin="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!--<RowDefinition Height="Auto" />-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{TemplateBinding HeaderWidth}"
                                          MinWidth="{TemplateBinding HeaderMinWidth}"
                                          MaxWidth="{TemplateBinding HeaderMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.HeaderColumn}" />
                        <ColumnDefinition Width="{TemplateBinding ValueWidth}"
                                          MinWidth="{TemplateBinding ValueMinWidth}"
                                          MaxWidth="{TemplateBinding ValueMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.ValueColumn}" />
                        <ColumnDefinition Width="{TemplateBinding SuffixWidth}"
                                          MinWidth="{TemplateBinding SuffixMinWidth}"
                                          MaxWidth="{TemplateBinding SuffixMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.SuffixColumn}" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_Header"
                             Grid.Row="0"
                             Grid.Column="0"
                             Focusable="False"
                             IsReadOnly="True"
                             Style="{TemplateBinding HeaderStyle}"
                             Text="{TemplateBinding Header}" />

                    <TextBox x:Name="PART_Value"
                             Grid.Row="0"
                             Grid.Column="1"
                             Focusable="{Binding IsReadOnly,
                                                 RelativeSource={RelativeSource Self},
                                                 Converter={x:Static propertyGrid:InvertBoolConverter.Default}}"
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             Text="{Binding Value,
                                            RelativeSource={RelativeSource TemplatedParent},
                                            UpdateSourceTrigger=PropertyChanged}"
                             Validation.ErrorTemplate="{x:Null}" />

                    <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                              Grid.Row="0"
                                              Grid.Column="2"
                                              Style="{TemplateBinding SuffixStyle}"
                                              Text="{TemplateBinding Suffix}" />

                    <!--<propertyGrid:InfoPresenter x:Name="InfoPresenter"
                                                        Grid.Row="1"
                                                        Grid.Column="0"
                                                        Grid.ColumnSpan="2"
                                                        Style="{TemplateBinding InfoPresenterStyle}" />-->
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="StringRowPlainTemplate" TargetType="{x:Type propertyGrid:StringRow}">
            <Border Margin="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <!--<RowDefinition Height="Auto" />-->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{TemplateBinding HeaderWidth}"
                                          MinWidth="{TemplateBinding HeaderMinWidth}"
                                          MaxWidth="{TemplateBinding HeaderMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.HeaderColumn}" />
                        <ColumnDefinition Width="{TemplateBinding ValueWidth}"
                                          MinWidth="{TemplateBinding ValueMinWidth}"
                                          MaxWidth="{TemplateBinding ValueMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.ValueColumn}" />
                        <ColumnDefinition Width="{TemplateBinding SuffixWidth}"
                                          MinWidth="{TemplateBinding SuffixMinWidth}"
                                          MaxWidth="{TemplateBinding SuffixMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.SuffixColumn}" />
                    </Grid.ColumnDefinitions>
                    <propertyGrid:HeaderBlock x:Name="PART_Header"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Style="{TemplateBinding HeaderStyle}"
                                              Text="{TemplateBinding Header}" />

                    <TextBox x:Name="PART_Value"
                             Grid.Row="0"
                             Grid.Column="1"
                             Focusable="{Binding IsReadOnly,
                                                 RelativeSource={RelativeSource Self},
                                                 Converter={x:Static propertyGrid:InvertBoolConverter.Default}}"
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             Text="{Binding Value,
                                            RelativeSource={RelativeSource TemplatedParent},
                                            UpdateSourceTrigger=PropertyChanged}"
                             Validation.ErrorTemplate="{x:Null}" />

                    <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                              Grid.Row="0"
                                              Grid.Column="2"
                                              Style="{TemplateBinding SuffixStyle}"
                                              Text="{TemplateBinding Suffix}" />

                    <!--<propertyGrid:InfoPresenter x:Name="InfoPresenter"
                                                        Grid.Row="1"
                                                        Grid.Column="0"
                                                        Grid.ColumnSpan="2"
                                                        Style="{TemplateBinding InfoPresenterStyle}" />-->
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="StringRowInfoTemplate" TargetType="{x:Type propertyGrid:StringRow}">
            <Border Margin="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{TemplateBinding HeaderWidth}"
                                          MinWidth="{TemplateBinding HeaderMinWidth}"
                                          MaxWidth="{TemplateBinding HeaderMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.HeaderColumn}" />
                        <ColumnDefinition Width="{TemplateBinding ValueWidth}"
                                          MinWidth="{TemplateBinding ValueMinWidth}"
                                          MaxWidth="{TemplateBinding ValueMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.ValueColumn}" />
                        <ColumnDefinition Width="{TemplateBinding SuffixWidth}"
                                          MinWidth="{TemplateBinding SuffixMinWidth}"
                                          MaxWidth="{TemplateBinding SuffixMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.SuffixColumn}" />
                    </Grid.ColumnDefinitions>
                    <propertyGrid:HeaderBlock x:Name="PART_Header"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Style="{TemplateBinding HeaderStyle}"
                                              Text="{TemplateBinding Header}" />

                    <TextBox x:Name="PART_Value"
                             Grid.Row="0"
                             Grid.Column="1"
                             Focusable="{Binding IsReadOnly,
                                                 RelativeSource={RelativeSource Self},
                                                 Converter={x:Static propertyGrid:InvertBoolConverter.Default}}"
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             Text="{Binding Value,
                                            RelativeSource={RelativeSource TemplatedParent},
                                            UpdateSourceTrigger=PropertyChanged}"
                             Validation.ErrorTemplate="{x:Null}" />

                    <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                              Grid.Row="0"
                                              Grid.Column="2"
                                              Style="{TemplateBinding SuffixStyle}"
                                              Text="{TemplateBinding Suffix}" />

                    <propertyGrid:InfoPresenter x:Name="InfoPresenter"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Style="{TemplateBinding InfoPresenterStyle}" />
                </Grid>
            </Border>
        </ControlTemplate>

        <ControlTemplate x:Key="StringRowInfoTextBoxHeaderTemplate" TargetType="{x:Type propertyGrid:StringRow}">
            <Border Margin="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{TemplateBinding HeaderWidth}"
                                          MinWidth="{TemplateBinding HeaderMinWidth}"
                                          MaxWidth="{TemplateBinding HeaderMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.HeaderColumn}" />
                        <ColumnDefinition Width="{TemplateBinding ValueWidth}"
                                          MinWidth="{TemplateBinding ValueMinWidth}"
                                          MaxWidth="{TemplateBinding ValueMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.ValueColumn}" />
                        <ColumnDefinition Width="{TemplateBinding SuffixWidth}"
                                          MinWidth="{TemplateBinding SuffixMinWidth}"
                                          MaxWidth="{TemplateBinding SuffixMaxWidth}"
                                          SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.SuffixColumn}" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_Header"
                             Grid.Row="0"
                             Grid.Column="0"
                             Focusable="False"
                             IsReadOnly="True"
                             Style="{TemplateBinding HeaderStyle}"
                             Text="{TemplateBinding Header}" />

                    <TextBox x:Name="PART_Value"
                             Grid.Row="0"
                             Grid.Column="1"
                             Focusable="{Binding IsReadOnly,
                                                 RelativeSource={RelativeSource Self},
                                                 Converter={x:Static propertyGrid:InvertBoolConverter.Default}}"
                             IsReadOnly="{TemplateBinding IsReadOnly}"
                             Text="{Binding Value,
                                            RelativeSource={RelativeSource TemplatedParent},
                                            UpdateSourceTrigger=PropertyChanged}"
                             Validation.ErrorTemplate="{x:Null}" />

                    <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                              Grid.Row="0"
                                              Grid.Column="2"
                                              Style="{TemplateBinding SuffixStyle}"
                                              Text="{TemplateBinding Suffix}" />

                    <propertyGrid:InfoPresenter x:Name="InfoPresenter"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2"
                                                Style="{TemplateBinding InfoPresenterStyle}" />
                </Grid>
            </Border>
        </ControlTemplate>

        <Style BasedOn="{StaticResource {x:Type propertyGrid:Row}}" TargetType="{x:Type propertyGrid:StringRow}">
            <!--<Setter Property="HeaderStyle" Value="{StaticResource HeaderTextBoxStyle}" />
            <Setter Property="InfoPresenterStyle" Value="{StaticResource {x:Type propertyGrid:InfoPresenter}}" />-->
            <Setter Property="Template" Value="{StaticResource StringRowPlainTemplate}" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding InfoPresenterStyle, RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                        <Condition Binding="{Binding HeaderStyle, RelativeSource={RelativeSource Self}, Converter={x:Static sandbox:StyleTargetTypeConverter.Default}}" Value="{x:Type TextBox}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Template" Value="{StaticResource StringRowTextBoxHeaderTemplate}" />
                </MultiDataTrigger>
                <Trigger Property="InfoPresenterStyle" Value="{x:Null}">
                    <Setter Property="Template" Value="{StaticResource StringRowInfoTemplate}" />
                </Trigger>
                <DataTrigger Binding="{Binding HeaderStyle, RelativeSource={RelativeSource Self}, Converter={x:Static sandbox:StyleTargetTypeConverter.Default}}" Value="{x:Type TextBox}">
                    <Setter Property="Template" Value="{StaticResource StringRowInfoTextBoxHeaderTemplate}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <demo:SettingsVm />
    </Window.DataContext>
    <StackPanel>
        <propertyGrid:Rows DataContext="{Binding EditableCopy}"
                           HeaderWidth="107"
                           HeaderStyle="{StaticResource HeaderTextBoxStyle}"
                           OldDataContext="{Binding DataContext.LastSaved,
                                                    RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                           SuffixWidth="20"
                           ValueWidth="70">
            <Button Content="lose focus" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Current stringvalue: " />
                <TextBox Grid.Column="1"
                         Width="70"
                         HorizontalAlignment="Left"
                         AutomationProperties.AutomationId="currentValueTextBox"
                         Text="{Binding StringValue}" />
            </Grid>

            <propertyGrid:StringRow Header="default" Value="{Binding StringValue}" />
            <propertyGrid:StringRow Header="propertychanged" Value="{Binding StringValue, UpdateSourceTrigger=PropertyChanged}" />
            <!--<propertyGrid:LengthRow Header="readonly string"
                                    IsReadOnly="True"
                                    Value="{Binding LengthValue}" />-->
        </propertyGrid:Rows>
    </StackPanel>
</Window>
