<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:Gu.Wpf.PropertyGrid"
                    xmlns:numeric="http://gu.se/NumericInput"
                    xmlns:propertyGrid="http://gu.se/PropertyGrid"
                    xmlns:unit="clr-namespace:Gu.Units;assembly=Gu.Units"
                    xmlns:units="http://Gu.com/Units">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Gu.Wpf.PropertyGrid;component/Themes/Generic.xaml" />
        <!--<ResourceDictionary Source="/Gu.Wpf.PropertyGrid.UnitSettingControls;component/Themes/UnitSettingControls.xaml" />-->
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="{x:Static propertyGrid:Keys.UnitSettingBaseStyleKey}" 
           TargetType="{x:Type propertyGrid:SettingControlBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="{TemplateBinding Padding}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.LabelColumn}" />
                            <ColumnDefinition Width="Auto"
                                              MinWidth="{Binding ValueWidth,
                                                                 RelativeSource={RelativeSource TemplatedParent}}"
                                              SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.ValueColumn}" />
                            <ColumnDefinition Width="Auto"
                                              MinWidth="{Binding SuffixWidth,
                                                                 RelativeSource={RelativeSource TemplatedParent}}"
                                              SharedSizeGroup="{x:Static propertyGrid:SharedSizeGroups.SuffixColumn}" />
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="Header"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   Style="{StaticResource {x:Static propertyGrid:Keys.SettingRowHeaderStyleKey}}"
                                   Text="{Binding Header,
                                                  RelativeSource={RelativeSource TemplatedParent}}" />

                        <numeric:DoubleBox x:Name="ValueBox"
                                           Grid.Row="0"
                                           Grid.Column="1"
                                           DecimalDigits="{Binding DecimalDigits,
                                                                   RelativeSource={RelativeSource TemplatedParent}}"
                                           Value="{Binding Value,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox"
                                   Grid.Row="0"
                                   Grid.Column="2"
                                   Style="{StaticResource {x:Static propertyGrid:Keys.SettingRowSuffixStyle}}"
                                   Text="{Binding Suffix,
                                                  RelativeSource={RelativeSource TemplatedParent}}" />

                        <Grid x:Name="InfoGrid"
                              Grid.Row="1"
                              Grid.Column="0"
                              Grid.ColumnSpan="2"
                              HorizontalAlignment="Right"
                              TextElement.FontSize="12">
                            <TextBlock HorizontalAlignment="Right"
                                       Foreground="LightGray"
                                       Text="missing"
                                       Visibility="{Binding Path=IsDirty,
                                                            RelativeSource={RelativeSource TemplatedParent},
                                                            Converter={propertyGrid:BooleanToVisibilityConverter WhenTrue=Collapsed,
                                                                                                                 WhenNull=Visible,
                                                                                                                 WhenFalse=Collapsed}}" />

                            <TextBlock x:Name="ErrorTextBox"
                                       HorizontalAlignment="Right"
                                       DataContext="{Binding ElementName=ValueBox}"
                                       Foreground="Red"
                                       Text="error"
                                       Visibility="{Binding HasError,
                                                            Converter={propertyGrid:BooleanToVisibilityConverter WhenTrue=Visible,
                                                                                                                 WhenNull=Collapsed,
                                                                                                                 WhenFalse=Collapsed}}" />

                            <TextBlock x:Name="OldValueBox"
                                       HorizontalAlignment="Right"
                                       Foreground="{DynamicResource Accent}"
                                       Visibility="{Binding Path=IsDirty,
                                                            RelativeSource={RelativeSource TemplatedParent},
                                                            Converter={propertyGrid:BooleanToVisibilityConverter WhenTrue=Visible,
                                                                                                                 WhenNull=Hidden,
                                                                                                                 WhenFalse=Hidden}}">
                                <Run Text="OldValue: " />
                                <Run Text="{Binding OldValue, RelativeSource={RelativeSource TemplatedParent}}" />
                            </TextBlock>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.UnitSettingBaseStyleKey}}" TargetType="{x:Type l:LengthSettingControl}" />
    <!--
    <units:LengthConverter x:Key="MillimetresConverter" Unit="{x:Static unit:LengthUnit.Millimetres}" />

    <units:LengthConverter x:Key="MicrometresConverter" Unit="{x:Static unit:LengthUnit.Micrometres}" />

    <Style BasedOn="{StaticResource SettingRowBaseStyle}"
           TargetType="{x:Type l:LengthSettingControl}">
        <Setter Property="Template" Value="{StaticResource SettingRowTemplate}" />
        <Style.Triggers>
            <Trigger Property="Unit" Value="{x:Static unit:LengthUnit.Millimetres}">
                <Setter Property="ValueTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <numeric:DoubleBox x:Name="ValueBox"
                                               MaxValue="{Binding MaxValue,
                                                                  Converter={StaticResource MillimetresConverter},
                                                                  RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}"
                                               MinValue="{Binding MinValue,
                                                                  Converter={StaticResource MillimetresConverter},
                                                                  RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}"
                                               Value="{Binding Value,
                                                               Converter={StaticResource MillimetresConverter},
                                                               RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="Unit" Value="{x:Static unit:LengthUnit.Micrometres}">
                <Setter Property="ValueTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <numeric:DoubleBox x:Name="ValueBox"
                                               MaxValue="{Binding MaxValue,
                                                                  Converter={StaticResource MicrometresConverter},
                                                                  RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}"
                                               MinValue="{Binding MinValue,
                                                                  Converter={StaticResource MicrometresConverter},
                                                                  RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}"
                                               Value="{Binding Value,
                                                               Converter={StaticResource MicrometresConverter},
                                                               RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    -->
</ResourceDictionary>
