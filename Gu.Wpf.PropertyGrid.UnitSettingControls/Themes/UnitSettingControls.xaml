<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:l="clr-namespace:Gu.Wpf.PropertyGrid"
                    xmlns:propertyGrid="http://gu.se/PropertyGrid"
					xmlns:numeric="http://gu.se/NumericInput">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Gu.Wpf.PropertyGrid.UnitSettingControls;component/Themes/BaseStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type l:AccelerationSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AccelerationSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AccelerationSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AmountOfSubstanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AmountOfSubstanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AmountOfSubstanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AngleSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AngleSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AngleSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AnglePerUnitlessSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AnglePerUnitlessSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AnglePerUnitlessSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AngularAccelerationSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AngularAccelerationSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AngularAccelerationSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AngularJerkSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AngularJerkSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AngularJerkSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AngularSpeedSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AngularSpeedSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AngularSpeedSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AreaSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AreaSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AreaSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:AreaDensitySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:AreaDensitySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:AreaDensitySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:CapacitanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:CapacitanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:CapacitanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:CatalyticActivitySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:CatalyticActivitySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:CatalyticActivitySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:CurrentSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:CurrentSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:CurrentSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:DataSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:DataSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:DataSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:DensitySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:DensitySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:DensitySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ElectricalConductanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:ElectricalConductanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ElectricalConductanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ElectricChargeSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:ElectricChargeSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ElectricChargeSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:EnergySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:EnergySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:EnergySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:FlexibilitySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:FlexibilitySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:FlexibilitySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ForceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:ForceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ForceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ForcePerUnitlessSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:ForcePerUnitlessSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ForcePerUnitlessSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:FrequencySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:FrequencySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:FrequencySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:IlluminanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:IlluminanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:IlluminanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:InductanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:InductanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:InductanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:JerkSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:JerkSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:JerkSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:KinematicViscositySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:KinematicViscositySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:KinematicViscositySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:LengthSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:LengthSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:LengthSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:LengthPerUnitlessSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:LengthPerUnitlessSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:LengthPerUnitlessSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:LuminousFluxSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:LuminousFluxSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:LuminousFluxSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:LuminousIntensitySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:LuminousIntensitySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:LuminousIntensitySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:MagneticFieldStrengthSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:MagneticFieldStrengthSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:MagneticFieldStrengthSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:MagneticFluxSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:MagneticFluxSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:MagneticFluxSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:MassSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:MassSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:MassSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:MassFlowSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:MassFlowSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:MassFlowSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:MomentumSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:MomentumSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:MomentumSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:PowerSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:PowerSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:PowerSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:PressureSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:PressureSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:PressureSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:ResistanceSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:ResistanceSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:ResistanceSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:SolidAngleSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:SolidAngleSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SolidAngleSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:SpecificEnergySettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:SpecificEnergySettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SpecificEnergySettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:SpecificVolumeSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:SpecificVolumeSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SpecificVolumeSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:SpeedSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:SpeedSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:SpeedSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:StiffnessSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:StiffnessSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:StiffnessSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TemperatureSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:TemperatureSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TemperatureSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TimeSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:TimeSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TimeSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:TorqueSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:TorqueSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TorqueSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:UnitlessSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:UnitlessSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:UnitlessSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:VoltageSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:VoltageSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:VoltageSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:VolumeSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:VolumeSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:VolumeSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:VolumetricFlowSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:VolumetricFlowSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:VolumetricFlowSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type l:WavenumberSettingControl}">
        <Setter Property="OldValueStyle">
            <Setter.Value>
                <Style BasedOn="{StaticResource {x:Static propertyGrid:Keys.SettingRowOldValueStyleKey}}" 
				       TargetType="{x:Type TextBlock}">
                    <Setter Property="Text" Value="{Binding OldStringValue, RelativeSource={RelativeSource AncestorType={x:Type l:WavenumberSettingControl}}, StringFormat='Old value: {0}'}" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:WavenumberSettingControl}">
                    <Grid Margin="{TemplateBinding Padding}"
					      Background="{TemplateBinding Background}"
					      Style="{StaticResource {x:Static propertyGrid:Keys.RootGridStyleKey}}">
                        <!--  ReSharper disable Xaml.MissingGridIndex  (setting in styles for flexibility)  -->
                        <TextBlock x:Name="Header" Style="{TemplateBinding HeaderStyle}" />

                        <numeric:DoubleBox x:Name="PART_ValueBox"
                                           MinWidth="{TemplateBinding ValueMinWidth}"
                                           MaxWidth="{TemplateBinding ValueMaxWidth}"
                                           propertyGrid:Grid.Cell="0,1"
                                           DecimalDigits="{TemplateBinding DecimalDigits}"
                                           IsReadOnly="{TemplateBinding IsReadOnly}"
                                           Validation.ErrorTemplate="{x:Null}"
                                           Value="{Binding ScalarValue,
                                                           RelativeSource={RelativeSource TemplatedParent}}" />

                        <TextBlock x:Name="SuffixBox" Style="{TemplateBinding SuffixStyle}" />

                        <propertyGrid:InfoPresenter x:Name="InfoPresenter" />
                        <!--  ReSharper restore Xaml.MissingGridIndex  -->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>