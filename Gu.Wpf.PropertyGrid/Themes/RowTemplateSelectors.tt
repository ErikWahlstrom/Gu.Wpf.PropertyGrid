<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".xaml" #>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:propertyGrid="clr-namespace:Gu.Wpf.PropertyGrid">
<#
		foreach(var rowType in new[]{"StringRow","ComboBoxRow"})
		{
		#>

    <propertyGrid:RowControlTemplateSelector x:Key="<#= rowType #>ControlTemplateSelector">
        <propertyGrid:RowControlTemplateSelector.PlainTemplate>
            <ControlTemplate TargetType="{x:Type propertyGrid:<#= rowType #>}">
                <Border Margin="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Header" />
                            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Value" />
                            <ColumnDefinition propertyGrid:ColumnDefinition.Source="Suffix" />
                        </Grid.ColumnDefinitions>

                        <propertyGrid:HeaderBlock x:Name="PART_Header"
                                Grid.Row="0"
                                Grid.Column="0"
                                Style="{TemplateBinding HeaderStyle}"
                                Text="{TemplateBinding Header}" />

                        <TextBox x:Name="PART_Value"
								Grid.Row="0"
								Grid.Column="1"
								Focusable="{Binding IsReadOnly,
													RelativeSource={RelativeSource Self},
													Converter={x:Static propertyGrid:InvertBoolConverter.Default}}"
								IsReadOnly="{TemplateBinding IsReadOnly}"
								Text="{Binding Value,
											RelativeSource={RelativeSource TemplatedParent},
											UpdateSourceTrigger=PropertyChanged}"
								Validation.ErrorTemplate="{x:Null}" />

                        <propertyGrid:SuffixBlock x:Name="PART_Suffix"
                                Grid.Row="0"
                                Grid.Column="2"
                                Style="{TemplateBinding SuffixStyle}"
                                Text="{TemplateBinding Suffix}" />

                        <propertyGrid:RowInfoPresenter x:Name="InfoPresenter"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Style="{TemplateBinding InfoPresenterStyle}" />
                    </Grid>
                </Border>
            </ControlTemplate>
        </propertyGrid:RowControlTemplateSelector.PlainTemplate>
    </propertyGrid:RowControlTemplateSelector>
<#
		} 
		#>
</ResourceDictionary>

<#+

    private const string TextBlockHeader = 
	@"                        <propertyGrid:HeaderBlock x:Name=""PART_Header""
                                Grid.Row=""0""
                                Grid.Column=""0""
                                Style=""{TemplateBinding HeaderStyle}""
                                Text=""{TemplateBinding Header}""
	";

	    private const string TextBoxHeader = 
	@"                        <TextBox x:Name=""PART_Header""
                             Grid.Row=""0""
                             Grid.Column=""0""
                             Focusable=""False""
                             IsReadOnly=""True""
                             Style=""{TemplateBinding HeaderStyle}""
                             Text=""{TemplateBinding Header}""
	";

	    private const string TextBlockSuffix = 
	@"                        <propertyGrid:HeaderBlock x:Name=""PART_Suffix""
                                Grid.Row=""0""
                                Grid.Column=""2""
                                Style=""{TemplateBinding SuffixStyle}""
                                Text=""{TemplateBinding Suffix}""
	";

	    private const string TextBoxSuffix = 
	@"                        <TextBox x:Name=""PART_Suffix""
                             Grid.Row=""0""
                             Grid.Column=""2""
                             Focusable=""False""
                             IsReadOnly=""True""
                             Style=""{TemplateBinding SuffixStyle}""
                             Text=""{TemplateBinding Suffix}""
	";

    private const string InfoTemplate =
        @"            <ControlTemplate TargetType=""{x:Type propertyGrid:{0}}"">
                        <Border Margin=""{TemplateBinding Padding}""
                                Background=""{TemplateBinding Background}""
                                BorderBrush=""{TemplateBinding BorderBrush}""
                                BorderThickness=""{TemplateBinding BorderThickness}"">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height=""Auto"" />
                                    <RowDefinition Height=""Auto"" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Header"" />
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Value"" />
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Suffix"" />
                                </Grid.ColumnDefinitions> 
                                {1}
                                {2}
                                {3}
                                {4}
                            </Grid>
		                </Border> 
		            </ControlTemplate>";
    private const string PlainTemplate =
        @"            <ControlTemplate TargetType=""{x:Type propertyGrid:{0}}"">
                        <Border Margin=""{TemplateBinding Padding}""
                                Background=""{TemplateBinding Background}""
                                BorderBrush=""{TemplateBinding BorderBrush}""
                                BorderThickness=""{TemplateBinding BorderThickness}"">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Header"" />
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Value"" />
                                    <ColumnDefinition propertyGrid:ColumnDefinition.Source=""Suffix"" />
                                </Grid.ColumnDefinitions> 
                                {1}
                                {2}
                                {3}
                            </Grid>
		                </Border> 
		            </ControlTemplate>";
    private static string GetInfoTemplate(string controlName, string headerXaml, string valueXaml, string suffixXaml, string infoXaml)
    {
        return  string.Format(InfoTemplate, controlName, headerXaml, valueXaml, suffixXaml, infoXaml);
    }

	    private static string GetPlainTemplate(string controlName, string headerXaml, string valueXaml, string suffixXaml, string infoXaml)
    {
        return  string.Format(PlainTemplate, controlName, headerXaml, valueXaml, suffixXaml, infoXaml);
    }
#>